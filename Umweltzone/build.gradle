apply plugin: 'android'

repositories {
    mavenCentral()
}

def versionMajor = 1
def versionMinor = 2
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha() {
    def res = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

    def diff = 'git diff'.execute([], project.rootDir).text.trim()
    if (diff != null && diff.length() > 0) {
        res += "-dirty"
    }

    return res
}

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}

Properties props = new Properties()
File gradlePropertiesFile = file("gradle.properties")
if (!gradlePropertiesFile.exists()) {
    throw new IllegalStateException(
            "Please create the file 'gradle.properties' before" +
                    "importing the project. Do not forget to add custom values!"
    )
}
props.load(new FileInputStream(gradlePropertiesFile))

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // Verbose Lint output
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "String", "BUILD_VERSION", "\"${versionName}\""
        buildConfigField "int", "BUILD_VERSION_CODE", "${versionCode}"
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""

        applicationVariants.all { variant ->
            def file = variant.outputFile
            def fileName = file.name.replace(".apk", "-" + versionName + ".apk")
            variant.outputFile = new File(file.parent, fileName)
        }
    }

    signingConfigs {
        release {
            storeFile file(props['signing.release.keystoreFilePath'])
            storePassword props['signing.release.keystorePassword']
            keyAlias props['signing.release.keyAlias']
            keyPassword props['signing.release.keyPassword']
        }
    }

    buildTypes {
        debug {
            packageNameSuffix ".debug"
            versionNameSuffix "-DEBUG"
            zipAlign true
        }
        release {
            runProguard true
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:19.1.+'
    compile 'com.android.support:support-v4:19.1.+'
    compile 'com.google.android.gms:play-services:3.2.+'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.+'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.+'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.+'
    compile 'de.cketti.library.changelog:ckchangelog:1.2.+'
    compile 'info.metadude.android:typed-preferences:1.1.+'
    compile fileTree(dir: 'libs', include: '*.jar')
}
